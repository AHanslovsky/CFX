<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CFXnet46</name>
    </assembly>
    <members>
        <member name="T:CFX.CFXEnvelope">
            <summary>
            The <see cref="T:CFX.CFXEnvelope"/> class is the outer envelope or container in which all CFX messages are enclosed for transmission.
            Common properties, such as a globally unique identifier (ID) and the timestamp for the message (TimeStamp),
            are defined by this container class and are included with all CFX message transmissions.
            </summary>
        </member>
        <member name="P:CFX.CFXEnvelope.MessageBody">
            <summary>
            The message payload (The CFX message enclosed in this envelope).
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.GetLoadedMaterialsRequest.LocationIdentifiers">
            <summary>
            An optional list of specific locations in which the requestor is interested.
            If empty, all materials loaded at the Endpoint are returned.
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.MaterialCarriersLoaded.Carriers">
            <summary>
            There are two usage cases are available for this message:
                1) Load MaterialCarrier directly to Endpoint 
                   (LocationIdentifier = Endpoint Slot Identifier, CarrierInformation = Carrier to be loaded)
                2) Load MateriialCarrier to another MaterialCarrier
                   (LocationIdentifier = Identifier of new parent carrier, CarrierInformation = Identifier of carrier to be loaded)
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.MaterialCarriersUnloaded.CarrierIdentifiers">
            <summary>
            List of carriers to be unloaded.  
            NOTE - This message DOES NOT mean that the MaterialPackage is unloaded from the MaterialCarrier.
                   Only that the MaterialCarrier is unloaded from its parent (slot on and Endpoint, or another MaterialCarrier).
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.MaterialsLoaded.Materials">
            <summary>
            There are three usage cases are available for this message:
                1) Load MaterialPackage directly to Endpoint 
                   (LocationIdentifier = Endpoint Slot Identifier, CarrierInformation = null)
                2) Load MaterialPackage to MaterialCarrier
                   (LocationIdentifier = null, CarrierInformation = Identifier of carrier to be loaded)
                3) Load MaterialPackage to MaterialCarrier AND Load MaterialCarrier to Endpoint
                   (LocationIdentifier = Endpoint Slot Identifier, CarrierInformation = Identifier of carrier to be loaded)
            </summary>
        </member>
        <member name="P:CFX.Materials.Storage.MaterialsUnloaded.MaterialPackageIdentifiers">
            <summary>
            List of material packages to be unloaded.  
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupRequest.Lane">
            <summary>
            An optional property designating the specific Lane.
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupRequest.Stage">
            <summary>
            An optional property designating the specific Stage.
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupResponse.RecipeName">
            <summary>
            The name of the recipe associated with the required setup.
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupResponse.Lane">
            <summary>
            An optional property designating the specific Lane associated with this setup.
            </summary>
        </member>
        <member name="P:CFX.Production.GetRequiredSetupResponse.Stage">
            <summary>
            An optional property designating the specific Stage associated with this setup.
            </summary>
        </member>
        <member name="P:CFX.Production.ReadingsRecorded.TransactionId">
            <summary>
            If the readings related to this message are associated with a work transaction, this property
            contains the Id of the transaction.
            </summary>
        </member>
        <member name="P:CFX.Production.ReadingsRecorded.Readings">
            <summary>
            A collection of readings to be recorded.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeModified.ModifiedBy">
            <summary>
            The name of the user who performed the modification.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeModified.Reason">
            <summary>
            The reason for the modification.
            </summary>
        </member>
        <member name="P:CFX.Production.RecipeModified.Notes">
            <summary>
            Any additional notes provided by the user who performed the modification.
            </summary>
        </member>
        <member name="T:CFX.Production.SetupRequirementsChanged">
            <summary>
            Indicates that the setup requirements of a particular Endpoint have changed.  If the Lane and Stage
            properties are left empty, the setup requirements of the entire Endpoint have been impacted.  Otherwise,
            only the specified Lane and/or Stage is impacted.
            </summary>
        </member>
        <member name="P:CFX.Production.SetupRequirementsChanged.Lane">
            <summary>
            An optional property designating the affected Lane.
            </summary>
        </member>
        <member name="P:CFX.Production.SetupRequirementsChanged.Stage">
            <summary>
            An optional property designating the affected Stage.
            </summary>
        </member>
        <member name="P:CFX.Production.UpdateRecipeRequest.Overwrite">
            <summary>
            If set to true, any existing Recipe at the Endpoint with the same name will be replaced by the Recipe
            provided in this request.  If set to False, the update request will not succeed if a Recipe with the same
            name exists at the Endpoint.
            </summary>
        </member>
        <member name="P:CFX.Production.UpdateRecipeRequest.Recipe">
            <summary>
            The new Recipe to be sent to the Endpoint.
            </summary>
        </member>
        <member name="T:CFX.Production.WorkStageStarted">
            <summary>
            Indicates that work has begun on one or more production units at a particular work center.
            </summary>
        </member>
        <member name="T:CFX.Production.WorkStarted">
            <summary>
            Indicates that work has begun on one or more production units at a particular work center.
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifiersRead.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifiersRead.Units">
            <summary>
            An optional list of actual production unit identifiers, in the case that multiple production units are moving through the 
            process, and the sensor is capable if reading multiple identifiers. 
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifyUnitsResponse.PrimaryIdentifier">
            <summary>
            The barcode, RFID, etc. that was most recently acquired by the scanner / reader.  If a single production unit is moving through the
            process, this would be the actual unique identifier of that individual unition unit.  However, if multiple production units are moving
            through the process as a group (as in the case of a PCB panel, a fixture, or any sort of carrier), this would be an identifier that
            represents the entire group of units, such as a carrier UID, a PCB panel UID, etc.
            </summary>
        </member>
        <member name="P:CFX.Sensor.Identification.IdentifyUnitsResponse.Units">
            <summary>
            An optional list of actual production unit identifiers, in the case that multiple production units are moving through the 
            process, and the sensor is capable if reading multiple identifiers. 
            </summary>
        </member>
        <member name="T:CFX.Structures.ComponentDesignator">
            <summary>
            Represents and identifies a particular component (instance of a part) on a production unit, or a particular aspect
            of a particular component, such as an individual pin of an electronic component.
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentDesignator.ReferenceDesignator">
            <summary>
            A dot (".") and comma (",") delimeted string identifying a particular component on a production unit.  
            
            Examples:
            
            C34
            U2.11  (component U2, Pin 11)
            U2.1-45 (component U2, Pins 1 to 45)
            U2.1,2 (component U2, Pin1 1 and 2)
            </summary>
        </member>
        <member name="P:CFX.Structures.ComponentDesignator.PartNumber">
            <summary>
            The internal part number of the designated component.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialLocation.LocationIdentifier">
            <summary>
            The unique identifier of the location on the Endpoint where the MaterialPackage is to be loaded.
            If this property is left empty, the MaterialPackage will only be loaded to the carrier specified
            by the CarrierInformation property, and not to an Endpoint.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialSetupRequirement.Position">
            <summary>
            The position where the required material must be installed on the Endpoint (optional).  
            Where applicable, a dot (".") notation should be utilized to designate 
            specific positions.  Examples:  MODULE1.FRONT.Pos23, STAGE2.BANK1.Pos44, etc.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialSetupRequirement.PartNumber">
            <summary>
            The internal part number of the part that must be loaded at this position.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialSetupRequirement.ApprovedAlternateParts">
            <summary>
            An optional list of approved alternate parts (internal part numbers) that may be substituted 
            for the primary part.
            </summary>
        </member>
        <member name="P:CFX.Structures.MaterialSetupRequirement.ApprovedManufacturerParts">
            <summary>
            An optional list of specific manufacturer part numbers that must be utilzed.  When specified,
            a part will only be acceptable if both its internal part number matches the PartNumber property (or Alternates), 
            AND its manufacturer part number matches one of the parts specified in the ApprovedManufacturerParts property.
            
            </summary>
        </member>
        <member name="P:CFX.Structures.Operator.OperatorIdentifier">
            <summary>
            An optional unique identifier for the Operator
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.ReadingIdentifier">
            <summary>
            A name that uniquely describes the test or measurement that was performed.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.TimeRecorded">
            <summary>
            The date/time when this Reading was recorded.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.ReadingSequence">
            <summary>
            An optional positive integer describing the sequence in which the tests or measurements were performed
            that resulted in this Reading.
            /// </summary>
        </member>
        <member name="P:CFX.Structures.Reading.Result">
            <summary>
            An enumeration indicating whether or not this reading is considered acceptable.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.UnitIdentifier">
            <summary>
            In the case that this Reading is associated to a particular production unit, and the Reading is not associated
            with a work transaction, this property contains the unique identifier of the production unit.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.UnitPositionNumber">
            <summary>
            In the case that this Reading is associated with a particular production unit, and the Reading is associated
            with a work transaction, this property contains the position number of the unit as it relates to the transaction.  
            If a position number is not specified, it is assumed that the Reading applies to all units associated with the
            transaction.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.Components">
            <summary>
            An optional list of components (instance of a part) on a production unit(s) to be associated with this reading.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.ValueMimeType">
            <summary>
            If the Reading is of type DataType.Binary, this property contains the MIME type
            of the binary data contained in the BinaryValue property.
            </summary>
        </member>
        <member name="P:CFX.Structures.Reading.BinaryValue">
            <summary>
            If the Reading is of type DataType.Binary, this property contains the binary
            representation of the value.
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.MimeType">
            <summary>
            The MIME type of the binary data contained by the RecipeData property.
            </summary>
        </member>
        <member name="P:CFX.Structures.Recipe.RecipeData">
            <summary>
            A binary representation of the recipe data.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapeFeeder.BaseUniqueIdentifier">
            <summary>
            For multi-lane feeders, the unique identifier of the base.  The UniqueIdentifier
            property should be populated with the unique identifer of the specific lane 
            within the feeder (if so labeled).  If lanes are not specifically labeled, both
            the UniqueIdentifer and BaseUniqueIdentifier prooperties should be populated
            with the same value.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapeFeeder.BaseName">
            <summary>
            The friendly name of the tape feeder base.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTapeFeeder.LaneNumber">
            <summary>
            For multi-lane tape feeders, this is the number of the position
            of the lane within the feeder.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubeFeeder.BaseUniqueIdentifier">
            <summary>
            The unique identifier of the vibratoryb tube feeder base of which this
            tube feeder position is a member.  If lanes are not specifically labeled, 
            both the UniqueIdentifer field and this property should be populated
            with the same value.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubeFeeder.BaseName">
            <summary>
            The friendly name of the tube feeder base.
            </summary>
        </member>
        <member name="P:CFX.Structures.SMTPlacement.SMDTubeFeeder.LaneNumber">
            <summary>
            The position number of this tube feeder position within its base.
            </summary>
        </member>
        <member name="P:CFX.Structures.StationSetupRequirements.Lane">
            <summary>
            An optional property designating the applicable Lane.
            </summary>
        </member>
        <member name="P:CFX.Structures.StationSetupRequirements.Stage">
            <summary>
            An optional property designating the applicable Stage.
            </summary>
        </member>
        <member name="P:CFX.Structures.StationSetupRequirements.SetupName">
            <summary>
            An optional name for this particular setup.
            </summary>
        </member>
        <member name="T:CFX.Structures.UnitPosition">
            <summary>
            A data object identifying a single production unit being processed during production.  A single work transaction
            </summary>
        </member>
        <member name="T:CFX.Transport.SHA">
            <summary> 
              Static class providing Secure Hashing Algorithm (SHA-1, SHA-224, SHA-256) 
            </summary> 
        </member>
        <member name="M:CFX.Transport.SHA.computeHMAC_SHA256(System.Byte[],System.Byte[])">
            <summary> 
              Compute HMAC SHA-256 
            </summary> 
            <param name = "secret">Secret</param> 
            <param name = "value">Password</param> 
            <returns>32 byte HMAC_SHA256</returns> 
        </member>
        <member name="M:CFX.Transport.SHA.computeSHA256(System.Byte[])">
            <summary> 
              Compute SHA-256 digest 
            </summary> 
            <param name = "input">Input array</param> 
        </member>
    </members>
</doc>
